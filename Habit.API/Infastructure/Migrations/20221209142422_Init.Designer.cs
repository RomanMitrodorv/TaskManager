// <auto-generated />
using System;
using Habit.API.Infastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Habit.API.Infastructure.Migrations
{
    [DbContext(typeof(HabitContext))]
    [Migration("20221209142422_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("habit_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("notification_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("periodicity_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("Habit.API.Models.HabitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "habit_hilo");

                    b.Property<int>("CompletedCount")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("PeriodicityId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PeriodicityId");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("Habit.API.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "notification_hilo");

                    b.Property<int>("HabitId")
                        .HasColumnType("int");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("Habit.API.Models.Periodicity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "periodicity_hilo");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Periodicity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "everyday",
                            Name = "Каждый день"
                        });
                });

            modelBuilder.Entity("Habit.API.Models.HabitModel", b =>
                {
                    b.HasOne("Habit.API.Models.Periodicity", "Periodicity")
                        .WithMany()
                        .HasForeignKey("PeriodicityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Periodicity");
                });

            modelBuilder.Entity("Habit.API.Models.Notification", b =>
                {
                    b.HasOne("Habit.API.Models.HabitModel", "Habit")
                        .WithMany("Notifications")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");
                });

            modelBuilder.Entity("Habit.API.Models.HabitModel", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
